#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('myapp:server');
var http = require('http');

/**
 * Get port from environment and store in Express.
 */

var port = parseInt(process.env.PORT, 10) || 3000;
app.set('port', port);


/**
 * Create HTTP server.
 */

var server = http.createServer(app);


var io = require('socket.io')(server);

io.on('connection', function(socket){
  console.log('a user connected via WebSocket.');

  socket.on('message', function(msg){
    console.log('message: ' + msg);
    socket.emit('reply', 'This is a message via socket.io server. Yaaay.');
  });

});

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);

console.log("Listening on port " + port);

server.on('error', onError);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error('Port ' + port + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error('Port ' + port + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}