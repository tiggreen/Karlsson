{"name":"plugged-api","tagline":"Express.js based API for a messaging app. ","body":"## Plugged API\r\n\r\n### Plugged is a RESTful API for a messaging app. \r\n#### Not released yet but under active development.\r\n\r\nThe Plugged API is organized around REST. The API uses HTTP response codes to indicate API responses and errors. JSON will be returned in all responses from the API, including errors.\r\n\r\nTo make the Plugged API to more accessible we provide a test API.\r\n\r\n\r\n### HTTP Status Code Summary\r\n\r\n- 200 OK - Everything worked as expected.\r\n- 400 Bad Request - Often missing a required parameter.\r\n- 401 Unauthorized - No valid API key provided.\r\n- 402 Request Failed - Parameters were valid but request failed.\r\n- 404 Not Found - The requested item doesn't exist.\r\n- 500, 502, 503, 504 Server errors. Somethine occured our server end.\r\n\r\n\r\n\r\n \r\n## Installation\r\n\r\nDownload the .zip of the project and extract it.\r\n\r\nGo to the directory via your terminal of choice and run - \r\n\r\n```\r\nsudo npm install\r\n```\r\n\r\nThis will install all the required modules of the service.\r\n\r\nI assume you have **npm** (Node Package Manager) installed. If you don't\r\nthen you just need to install Node.js and npm comes with it.\r\n\r\n\r\nAfter the modules are installed make sure **node_modules** directory is created in your current dir. \r\n\r\nThe last step is to run the server -   \r\n\r\n```\r\n./bin/www\r\n```\r\n\r\nThis will start the server on your localhost at port number 3000. \r\n\r\n```\r\nlocalhost:3000\r\n```\r\n\r\nYou're all set.\r\n\r\n\r\n## API Reference\r\n\r\n### Verify a phone number.\r\n\r\n```javascript\r\nPOST  https://plugged-api.herokuapp.com/verify/phone\r\n\r\nREQ HEADER\r\n{ \r\n\tContent-Type: application/json\r\n}\r\n\r\nREQ BODY\r\n{\r\n  phone: your_phone_number\r\n}\r\n\r\n```\r\n\r\nAfter requesting to verify your phone number you will get a pin as a text message.\r\nOnce you have the pin, you can use the following endpoint to finish your phone number\r\nverification.\r\n\r\n### Verify the pin. \r\n\r\n```javascript\r\nPOST  https://plugged-api.herokuapp.com/verify/pin\r\n\r\nREQ HEADER\r\n{ \r\n\tContent-Type: application/json\r\n}\r\n\r\nREQ BODY\r\n{\r\n  phone: your_phone_number,\r\n  pin: your_pin\r\n}\r\n\r\n```\r\n\r\nPlease keep in mind that pins are valid only for 30 min.\r\n\r\nIn Development...\r\n\r\n## Tests\r\n\r\nAll tests are implemented using [Mocha](http://mochajs.org/) framework.\r\n\r\nTo run all the test simply run\r\n\r\n```\r\nmocha\r\n```\r\n\r\non the terminal. \r\n\r\n## Contributors\r\n\r\n@tiggreen\r\n\r\n## License\r\n\r\nMIT\r\nThe Stripe API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and to use HTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs, which can be understood by off-the-shelf HTTP clients, and we support cross-origin resource sharing to allow you to interact securely with our API from a client-side web application (though you should remember that you should never expose your secret API key in any public website's client-side code). JSON will be returned in all responses from the API, including errors (though if you're using API bindings, we will convert the response to the appropriate language-specific object).\r\nTo make the Stripe API as explorable as possible, accounts have test-mode API keys as well as live-mode API keys. These keys can be active at the same time. Data created with test-mode credentials will never hit the credit card networks and will never cost anyone money.\r\n\r\n\r\n### HTTP Status Code Summary\r\n\r\n- 200 OK - Everything worked as expected.\r\n- 400 Bad Request - Often missing a required parameter.\r\n- 401 Unauthorized - No valid API key provided.\r\n- 402 Request Failed - Parameters were valid but request failed.\r\n- 404 Not Found - The requested item doesn't exist.\r\n- 500, 502, 503, 504 Server errors - something went wrong on Stripe's end.\r\n\r\nPlugged is a RESTful API for a messaging app. Not released yet but\r\nunder avtive development.\r\n\r\n\r\n## Installation\r\n\r\nDownload the .zip of the project and extract it.\r\n\r\nGo to the directory via your terminal of choice and run - \r\n\r\n```\r\nsudo npm install\r\n```\r\n\r\nThis will install all the required modules of the service.\r\n\r\nI assume you have **npm** (Node Package Manager) installed. If you don't\r\nthen you just need to install Node.js and npm comes with it.\r\n\r\n\r\nAfter the modules are installed make sure **node_modules** directory is created in your current dir. \r\n\r\nThe last step is to run the server -   \r\n\r\n```\r\n./bin/www\r\n```\r\n\r\nThis will start the server on your localhost at port number 3000. \r\n\r\n```\r\nlocalhost:3000\r\n```\r\n\r\nYou're all set.\r\n\r\n\r\n## API Reference\r\n\r\n### Verify a phone number.\r\n\r\n```javascript\r\nPOST  https://plugged-api.herokuapp.com/verify/phone\r\n\r\nREQ HEADER\r\n{ \r\n\tContent-Type: application/json\r\n}\r\n\r\nREQ BODY\r\n{\r\n  phone: your_phone_number\r\n}\r\n\r\n```\r\n\r\nAfter requesting to verify your phone number you will get a pin as a text message.\r\nOnce you have the pin, you can use the following endpoint to finish your phone number\r\nverification.\r\n\r\n### Verify the pin. \r\n\r\n```javascript\r\nPOST  https://plugged-api.herokuapp.com/verify/pin\r\n\r\nREQ HEADER\r\n{ \r\n\tContent-Type: application/json\r\n}\r\n\r\nREQ BODY\r\n{\r\n  phone: your_phone_number,\r\n  pin: your_pin\r\n}\r\n\r\n```\r\n\r\nPlease keep in mind that pins are valid only for 30 min.\r\n\r\nIn Development...\r\n\r\n## Tests\r\n\r\nAll tests are implemented using [Mocha](http://mochajs.org/) framework.\r\n\r\nTo run all the test simply run\r\n\r\n```\r\nmocha\r\n```\r\n\r\non the terminal. \r\n\r\n## Contributors\r\n\r\n@tiggreen\r\n\r\n## License\r\n\r\nMIT","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}